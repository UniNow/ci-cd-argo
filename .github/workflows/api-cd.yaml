name: Apps/API CD

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api/**'


jobs:
  build-docker-image:
    timeout-minutes: 15
    runs-on: ubuntu-20.04
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Checkout the repo
        uses: actions/checkout@v3.0.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::main_$(git rev-parse --short HEAD)

      - name: Build Binary
        run: CGO_ENABLED=0 GOOS=linux cd ./apps/api && go build -mod=readonly -v -o ./bin/api ./cmd/api
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          file: './apps/api/build/Dockerfile'
          context: './apps/api'
          push: true
          tags: |
            ghcr.io/uninow/ci-cd-argo-api:${{ steps.get_version.outputs.VERSION }}
            

  kustomize:
    runs-on: ubuntu-latest
    needs:
      - build-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Get version
        id: version
        run: echo ::set-output name=VERSION::main_$(git rev-parse --short HEAD)
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "4.x"
      - name: Update Image version
        run: |
          cd deploy/kustomize/production
          kustomize edit set image api=ghcr.io/uninow/ci-cd-argo-api:${{ steps.version.outputs.VERSION }}
          cat kustomization.yaml
      - name: deploy changes
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git pull
          git add .
          git commit -am "ci: :rocket: Bump api version to ${{ steps.version.outputs.VERSION }}"
          git push origin HEAD:main